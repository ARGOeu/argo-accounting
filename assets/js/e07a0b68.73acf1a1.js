"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6356],{4776:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var i=n(4848),r=n(8453);const c={id:"metric_type",title:"Metric Type",sidebar_position:8},s="Metric Type",a={id:"api/metric_type",title:"Metric Type",description:"A Metric Type determines how the physical quantities are collected over",source:"@site/docs/api/metric_type.md",sourceDirName:"api",slug:"/api/metric_type",permalink:"/argo-accounting/docs/api/metric_type",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"metric_type",title:"Metric Type",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Metric",permalink:"/argo-accounting/docs/api/metric"},next:{title:"Unit Type",permalink:"/argo-accounting/docs/api/unit_type"}},o={},d=[{value:"[POST] - Create a Metric Type",id:"post---create-a-metric-type",level:2},{value:"[GET] - Fetch a Metric Type",id:"get---fetch-a-metric-type",level:2},{value:"[PATCH] - Update a Metric Type",id:"patch---update-a-metric-type",level:2},{value:"[DELETE]  - Delete a Metric Type",id:"delete----delete-a-metric-type",level:2},{value:"[GET]  - Fetch all the Metric Types",id:"get----fetch-all-the-metric-types",level:2},{value:"Errors",id:"errors",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"metric-type",children:"Metric Type"}),"\n",(0,i.jsxs)(t.p,{children:["A Metric Type determines how the physical quantities are collected over\nlonger time windows.\nOnce a Metric Type is generated, it can be used as an attribute of a\n",(0,i.jsx)(t.a,{href:"/argo-accounting/docs/api/metric_definition",children:"Metric Definition"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"The client can interact through several operations with the API in order to\ncreate, update, delete or fetch a Metric Type. The aforementioned operations\nare described below."}),"\n",(0,i.jsx)(t.p,{children:"The Metric Type can be expressed by the following structure:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"id"}),(0,i.jsx)(t.td,{children:"A unique identifier"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"metric_type"}),(0,i.jsx)(t.td,{children:"The Metric Type"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"description"}),(0,i.jsx)(t.td,{children:"Short Description of a Metric Type"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"post---create-a-metric-type",children:"[POST] - Create a Metric Type"}),"\n",(0,i.jsx)(t.p,{children:"The client can submit a new Metric Type by executing the following POST\nrequest:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'POST /accounting-system/metric-types\n\nContent-type: application/json\nAuthorization: Bearer {token}\n\n{\n    "metric_type" : "aggregated",\n    "description" : "The sum of all values captured over the aggregation interval"\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Upon inserting the record into the database, the API returns the stored\nMetric Type:"}),"\n",(0,i.jsxs)(t.p,{children:["Success Response ",(0,i.jsx)(t.code,{children:"201 CREATED"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'{\n    "id": "63cfa31aca73200e5a7707b6",\n    "metric_type": "aggregated",\n    "description": "The sum of all values captured over the aggregation interval",\n    "creator_id": "115143399384cc3177df5377691ccdbb284cb245fad1c@aai.eosc-portal.eu"\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"The response also contains the id generated by the database and the creator_id,\nwhich is the client's unique id."}),"\n",(0,i.jsx)(t.h2,{id:"get---fetch-a-metric-type",children:"[GET] - Fetch a Metric Type"}),"\n",(0,i.jsx)(t.p,{children:"The client should be able to fetch an existing Metric Type. By passing the Metric\nType ID, the client can request the corresponding Metric Type by executing the\nfollowing request:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"GET /accounting-system/metric-types/{metric_type_id}\n\nAuthorization: Bearer {token}\n"})}),"\n",(0,i.jsx)(t.p,{children:"The response returned to the client is the following:"}),"\n",(0,i.jsxs)(t.p,{children:["Success Response ",(0,i.jsx)(t.code,{children:"200 OK"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'{\n    "id": "63cfa31aca73200e5a7707b6",\n    "metric_type": "aggregated",\n    "description": "The sum of all values captured over the aggregation interval",\n    "creator_id": "115143399384cc3177df5377691ccdbb284cb245fad1c@aai.eosc-portal.eu"\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"patch---update-a-metric-type",children:"[PATCH] - Update a Metric Type"}),"\n",(0,i.jsx)(t.p,{children:"You can update a part or all attributes of an existing Metric Type using the\nfollowing PATCH request. The empty or null values are ignored."}),"\n",(0,i.jsx)(t.p,{children:"You cannot update a Metric Type registered by Accounting Service or a Metric\nType used in an existing Metric Definition."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'PATCH /accounting-system/metric-types/{metric_type_id}\n\nContent-type: application/json\nAuthorization: Bearer {token}\n\n\n{\n    "metric_type" : "metric_type_to_be_updated",\n    "description" : "description_to_be_updated"\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"The response will be the updated entity :"}),"\n",(0,i.jsxs)(t.p,{children:["Success Response ",(0,i.jsx)(t.code,{children:"200 OK"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'{\n    "id": "63cfa31aca73200e5a7707b6",\n    "metric_type": "updated_metric_type",\n    "description": "updated_description",\n    "creator_id": "115143399384cc3177df5377691ccdbb284cb245fad1c@aai.eosc-portal.eu"\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"To update the properties of an actual Metric Type, the body of the request must\ncontain an updated representation of it. For example, to edit the metric type,\nsend the following request:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'PATCH /accounting-system/metric-types/{metric_type_id}\n\nContent-type: application/json\nAuthorization: Bearer {token}\n\n{  \n    "metric_type": "metric_type_to_be_updated"\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"delete----delete-a-metric-type",children:"[DELETE]  - Delete a Metric Type"}),"\n",(0,i.jsx)(t.p,{children:"A Metric Type can be deleted by executing the following request:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"DELETE /accounting-system/metric-types/{metric_type_id}\n\nAuthorization: Bearer {token}\n"})}),"\n",(0,i.jsx)(t.p,{children:"If the operation is successful, you get the following response:"}),"\n",(0,i.jsxs)(t.p,{children:["Success Response ",(0,i.jsx)(t.code,{children:"200 OK"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'{\n    "code": 200,\n    "message": "The Metric Type has been deleted successfully."\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"You cannot delete a Metric Type registered by Accounting Service or a Metric\nType used in an existing Metric Definition."}),"\n",(0,i.jsx)(t.h2,{id:"get----fetch-all-the-metric-types",children:"[GET]  - Fetch all the Metric Types"}),"\n",(0,i.jsx)(t.p,{children:"You can also fetch all the Metric Types that exist to the accounting system."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"GET /accounting-system/metric-types\n\nAuthorization: Bearer {token}\n"})}),"\n",(0,i.jsx)(t.p,{children:"If the operation is successful, you get the following response:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'{\n    "size_of_page": 2,\n    "number_of_page": 1,\n    "total_elements": 5,\n    "total_pages": 3,\n    "content": [\n        {\n            "id": "63d23e504fed2081bbe3955e",\n            "metric_type": "aggregated",\n            "description": "The sum of all values captured over the aggregation interval",\n            "creator_id": ""\n        },\n        {\n            "id": "63d23e504fed2081bbe3955f",\n            "metric_type": "count",\n            "description": "It represents the total number of event occurrences in\n            one time interval",\n            "creator_id": ""\n        }\n    ],\n    "links": [\n        {\n            "href": "http://localhost:8080/accounting-system/metric-types?page=1&size=2",\n            "rel": "first"\n        },\n        {\n            "href": "http://localhost:8080/accounting-system/metric-types?page=3&size=2",\n            "rel": "last"\n        },\n        {\n            "href": "http://localhost:8080/accounting-system/metric-types?page=1&size=2",\n            "rel": "self"\n        },\n        {\n            "href": "http://localhost:8080/accounting-system/metric-types?page=2&size=2",\n            "rel": "next"\n        }\n    ]\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"The Metric Types, which have empty creator_id, have been generated by\nAccounting Service. The Metric Types created by a client contains their id."}),"\n",(0,i.jsx)(t.h2,{id:"errors",children:"Errors"}),"\n",(0,i.jsxs)(t.p,{children:["Please refer to section ",(0,i.jsx)(t.a,{href:"./api_errors",children:"Errors"})," to see all possible Errors."]})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(6540);const r={},c=i.createContext(r);function s(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);